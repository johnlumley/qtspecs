<item>
   <title>Issue #1267 created</title>
   <pubDate>2024-06-11T13:58:34Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1267</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1267</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:apply() - contradiction in spec&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The spec says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The arity of the supplied function $function must be the same as the size of the array $array.&lt;/p&gt;
&lt;p&gt;The effect of calling fn:apply($f, [$a, $b, $c, ...]) is the same as the effect of the dynamic function call $f($a, $b, $c, ....). For example, the function conversion rules are applied to the supplied arguments in the usual way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two rules appear contradictory. If the function conversion rules (should be: coercion rules) are applied in the usual way, then it is possible to supply excess arguments, which will be ignored.&lt;/p&gt;
&lt;p&gt;If excess arguments can be supplied then the example &lt;code&gt;apply($f, array:subarray([ "a", "b", "c", "d", "e", "f" ], 1, function-arity($f)))&lt;/code&gt; becomes meaningless, since the same effect can be achieved with &lt;code&gt;apply($f, [ "a", "b", "c", "d", "e", "f" ])&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(Also, we could now write &lt;code&gt;apply($f, [ "a", "b", "c", "d", "e", "f" ]?[1 to function-arity($f)])&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
