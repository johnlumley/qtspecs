<item>
   <title>Issue #1320 created</title>
   <pubDate>2024-07-11T11:30:13Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1320</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1320</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:parse-uri: Observations&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;@ndw I decided to only give feedback on the first test that fails; maybe it makes things easier. Next, I chose this repository (instead of &lt;code&gt;qt4tests&lt;/code&gt;), as you are the better person to judge if bugs are to be fixed in the tests or the spec.&lt;/p&gt;
&lt;p&gt;The test case &lt;a href="https://github.com/qt4cg/qt4tests/blob/5b0750b035d336040b4944dba6225e50bd004839/fn/parse-uri.xml#L239-L253"&gt;fn-parse-uri-012&lt;/a&gt; uses &lt;code&gt;fn:parse-uri("file:///c:/path/to/file")&lt;/code&gt; and returns:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;{
  "uri": "file:///c:/path/to/file",
  "scheme": "file",
  "hierarchical": true(),
  "path": "/c:/path/to/file",
  "filepath": "c:/path/to/file",
  "path-segments": ("", "c:", "path", "to", "file")
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Following the current rules, I would have expected &lt;code&gt;filepath&lt;/code&gt; to be &lt;code&gt;/c:/path/to/file&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If URI matches `^([a-zA-Z][A-Za-z0-9\+\-\.]*):(.*)$`:
• SCHEME: file
• STRING: ///c:/path/to/file

If the scheme is known to be file and the string matches "^/*(/[a-zA-Z][:|].*)$":
• STRING: /c:/path/to/file

If the scheme is file or the empty sequence, and filepath is the empty sequence, filepath is also the whole string:
• FILEPATH: /c:/path/to/file
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would you propose to revise the test or the specification?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
