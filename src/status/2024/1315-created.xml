<item>
   <title>Issue #1315 created</title>
   <pubDate>2024-07-04T13:29:40Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1315</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1315</guid>
   <description>&lt;div&gt;&lt;p&gt;12 div-3&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Revisiting an old issue here: should &lt;code&gt;12 div-3&lt;/code&gt; parse?&lt;/p&gt;
&lt;p&gt;Under the new 4.0 tokenization rules, it certainly doesn't.&lt;/p&gt;
&lt;p&gt;But under Michael Dyck's interpretation of the 3.1 rules, it does parse; and accordingly we made it parse in Saxon: see https://saxonica.plan.io/issues/2715 .&lt;/p&gt;
&lt;p&gt;Michael D's reasoning is at&lt;/p&gt;
&lt;p&gt;https://lists.w3.org/Archives/Public/public-xsl-query/2016Mar/0037.html&lt;/p&gt;
&lt;p&gt;He argued that the the longest token "consistent with the EBNF" is &lt;code&gt;div&lt;/code&gt; (because &lt;code&gt;div-3&lt;/code&gt; is not consistent with the EBNF), and that the rule requiring a space between an NCName and a hyphen does not apply because &lt;code&gt;div&lt;/code&gt; in this context is a keyword, not an NCName.&lt;/p&gt;
&lt;p&gt;Specifically, in existing XPath processors, does it parse?&lt;/p&gt;
&lt;p&gt;I'm going to defend the new rules in 4.0 here, in which tokenization is independent of syntactic context. I think that's a much clearer definition. But in the interests of full disclosure, the CG might like to note that this may be incompatible with the way some people have interpreted the 3.1 rules&lt;/p&gt;
&lt;p&gt;Incidentally, removing the tweak that makes Saxon able to parse &lt;code&gt;12 div-3&lt;/code&gt; doesn't break any test cases.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
