<item>
   <title>Issue #1314 created</title>
   <pubDate>2024-07-01T16:39:04Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1314</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1314</guid>
   <description>&lt;div&gt;&lt;p&gt;Ambiguity in XPath EBNF - Lookup with TypeQualifier vs DynamicFunctionCall&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Additional to https://github.com/qt4cg/qtspecs/issues/1050
An additional ambiguity occurs in one of the deep lookup examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$tree ??$from ??type(record(to, distance))[?to=$to] ?distance
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which can be simplified to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$tree ??type(foo)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where there is ambiguity between a &lt;code&gt;LookupExpr&lt;/code&gt; with &lt;code&gt;TypeQualifier&lt;/code&gt; and a &lt;code&gt;DynamicFunctionCall&lt;/code&gt; on a function named &lt;code&gt;type&lt;/code&gt;. That is, &lt;code&gt;type&lt;/code&gt; should perhaps be one of the restrictions on function name to avoid this ambiguity.&lt;/p&gt;
&lt;p&gt;Whether something more fundamental is needed on the productions around [74],[75] and [84]-[88] I'm not sure, but certainly &lt;code&gt;type&lt;/code&gt; can appear either as a keyword for &lt;code&gt;TypeQualifier&lt;/code&gt; (consuming the bracketed type) or a value of an &lt;code&gt;NCName&lt;/code&gt; (with the bracketed section being a higher-level &lt;code&gt;PositionalArgumentList&lt;/code&gt;), both being part of a&lt;code&gt; KeySpecifier&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
