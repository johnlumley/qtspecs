<item>
   <title>Issue #1463 created</title>
   <pubDate>2024-09-25T14:45:49Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1463</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1463</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:element-number: Feedback&lt;/p&gt;&lt;div class="markup"&gt;&lt;ol&gt;
&lt;li&gt;All other XQFO functions that have &lt;code&gt;.&lt;/code&gt; as the default value for a node parameter (&lt;code&gt;fn:name&lt;/code&gt;, etc.) return an empty sequence if the passed argument is an empty sequence. Could we use the same rule for &lt;code&gt;fn:element-number&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;The last example is incomplete; it must be &lt;code&gt;$e//section...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The last example should return &lt;code&gt;1.2&lt;/code&gt; instead of &lt;code&gt;1.1&lt;/code&gt;. If the given result is correct, the equivalent XPath expression needs to be revised.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While it was a no-brainer to implement the function, its specification seems overwhelming to me. I eventually read all the notes, but at the end I was more confused than in the beginning ;·) It could be one of those functions that are more accessible to users than to implementors, though.&lt;/p&gt;
&lt;p&gt;Still, maybe at least 1, 2 more examples could be provided? The last example goes into that direction, but it could be a bit cryptic for non-experts (e.g. it expects users to know that the result of &lt;code&gt;$s/ancestor-or-self::section&lt;/code&gt; is returned in document order).&lt;/p&gt;
&lt;p&gt;As this function seems to be mostly targeted to XSLT users, maybe we should offer XSLT examples. I assume that XQuery developers may rather be tempted to enumerate all children/descedants of a node, and write recursive code like…&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare function enumerate($element, $numbers) {
  for $child at $pos in $element/*
  let $n := $numbers || '.' || $pos
  return ($n, enumerate($child, $numbers || $n))
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In general, if we were able to generalize the function in one way or another, that would be great.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
