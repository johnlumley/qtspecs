<item>
   <title>Issue #1416 created</title>
   <pubDate>2024-09-03T18:39:25Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1416</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1416</guid>
   <description>&lt;div&gt;&lt;p&gt;Key-value pairs: built-in record type `pair`&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;A built-in record type should be defined for &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#dt-key-value-pair-map"&gt;key-value pair maps&lt;/a&gt;, which currently defined as follows…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A key-value pair map is a map containing two entries, one (with the key &lt;code&gt;"key"&lt;/code&gt;) containing the key part of a key value pair, the other (with the key &lt;code&gt;"value"&lt;/code&gt;) containing the value part of a key value pair.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;…as we can expect them to be used more often in the future. Would it be possible/make sense to assign the record type to the &lt;code&gt;xs&lt;/code&gt; namespace (&lt;code&gt;xs:pair&lt;/code&gt;)?&lt;/p&gt;
&lt;p&gt;In addition, we should…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use it consistently in the text (XQFO, deep lookups, etc.),&lt;/li&gt;
&lt;li&gt;replace existing &lt;code&gt;record(key as xs:anyAtomicType, value as item()*)&lt;/code&gt; references with &lt;code&gt;xs:pair&lt;/code&gt;, and&lt;/li&gt;
&lt;li&gt;rename &lt;code&gt;$input&lt;/code&gt; or &lt;code&gt;$map&lt;/code&gt; arguments to &lt;code&gt;$pair&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples for function signatures to be updated:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;map:of-pairs(
  $pairs    as xs:pair*,
  $combine  as fn(item()*, item()*) as item()* := fn:op(',')
) as map(*)

map:pair(
  $key    as xs:anyAtomicType,
  $value  as item()*	
) as xs:pair

map:pairs(
  $map  as map(*)	
) as xs:pair*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could add numerous other record types, but maybe we can handle those in separate issue and keep this one focused on key/value pairs.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
