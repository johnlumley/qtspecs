<item>
   <title>Issue #1305 created</title>
   <pubDate>2024-06-25T19:22:02Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1305</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1305</guid>
   <description>&lt;div&gt;&lt;p&gt;Almost all functions in FO that must process multiple string items, can have as a parameter only a single collation&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;&lt;strong&gt;The problem&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;At present the only XPath 4 function (that I am aware of) that can process multiple strings and use multiple collations (a specific collation for a specific string comparison) is &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-sort"&gt;&lt;strong&gt;&lt;code&gt;fn:sort&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some very important functions, such as &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-deep-equal"&gt;&lt;strong&gt;&lt;code&gt;fn:deep-equal&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-compare"&gt;&lt;strong&gt;&lt;code&gt;fn:compare&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; can have only one collation as a parameter.&lt;/p&gt;
&lt;p&gt;This means that when we are comparing sequences of items which contain multiple strings each of which could need to be handled in a specific collation, we are not able to provide all such collations (but are providing just a single collation) to the comparing function - &lt;code&gt;fn:deep-equal&lt;/code&gt; or &lt;code&gt;fn:compare&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The end result is that all string comparisons will be done using that single collation and may not produce the correct result (that would be produced if the particular comparison was done with the particular collation).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Possible solutions&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It is difficult to provide a solution to this problem and the list below is open ended:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add a &lt;strong&gt;&lt;code&gt;collation&lt;/code&gt;&lt;/strong&gt; property to the type &lt;code&gt;xs:string&lt;/code&gt;.
Then we would specify the type as &lt;strong&gt;&lt;code&gt;(xs:string, collation-name?)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make &lt;code&gt;fn:deep-equal&lt;/code&gt; and &lt;code&gt;fn:compare&lt;/code&gt; accept not a single collation but a sequence of collation-names.
In this case a pair of strings will be compared once for every collation that is specified. The idea is that the sequence of collations would be provided ordered by decreasing specificity. The first result that is produced at least twice in this process (something like voting) would be the result of the comparison. In case of a tie, the comparison done with the collation that is earliest (supposed to be more specific) will have higher priority.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave this as it is at present, but add to the specification a warning to the user that specifying a single collation-name may not be what they want.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove from &lt;code&gt;fn:sort&lt;/code&gt; the multiple-collations parameter and allow only a single collation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
