<item>
   <title>Issue #1456 created</title>
   <pubDate>2024-09-17T22:30:57Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1456</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1456</guid>
   <description>&lt;div&gt;&lt;p&gt;Filtering by type in lookup expressions&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We have dropped the syntax &lt;code&gt;??type(T)&lt;/code&gt; for filtering the results of lookup expressions, because of problems with syntax ambiguity. This issue seeks an alternative.&lt;/p&gt;
&lt;p&gt;Although selection by type also makes sense with shallow lookup, it is most relevant with deep lookup. The main need arises with intermediate steps of a path such as &lt;code&gt;?? X ?? Y&lt;/code&gt; which gives a dynamic error if X selects something that is not a map or array. This is consistent at one level with &lt;code&gt;// X // Y&lt;/code&gt;, except that &lt;code&gt;// X&lt;/code&gt; can never select something that isn't a node.&lt;/p&gt;
&lt;p&gt;The main problems with filtering using an &lt;code&gt;[. instance of record(p, q)]&lt;/code&gt; predicate is that it's very long-winded. For example, if we want to select only those members of a selected array that are sequences of a particular record type, without flattening everything else, we have to write something like &lt;code&gt;?? values::* ?[. instance of record(p, q)+] ? *&lt;/code&gt;, which is a bit of a nightmare.&lt;/p&gt;
&lt;p&gt;Starting from the end goal, I would like to be able to write something close to &lt;code&gt;??record(first, last)&lt;/code&gt; to select all the items of this record type at any depth. We know that syntax doesn't work, because &lt;code&gt;??NCName&lt;/code&gt; is already taken. That's also true for &lt;code&gt;??items::record(first, last)&lt;/code&gt;, unless we change the rules for what can appear after &lt;code&gt;::&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, there's another syntax hazard: what we want here is a SequenceType, not an ItemType, and that means that it can contain a trailing &lt;code&gt;?&lt;/code&gt; occurrence indicator, which is easily confused with the next lookup operator in a path.&lt;/p&gt;
&lt;p&gt;Looking at it from all angles, I do feel the best solution is to prefix the &lt;code&gt;record(first, last)&lt;/code&gt; with a marker character so that we know we've got a type filter here. Characters that might do the job include &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;. Of these, my preference remains &lt;code&gt;~&lt;/code&gt;, for three reasons:&lt;/p&gt;
&lt;p&gt;(a) it's currently unused: overloading a different symbol is more likely to cause visual confusion
(b) one of the traditional uses of &lt;code&gt;~&lt;/code&gt; is to indicate a "matches" or "is kind of like" relationship.
(c) there's a mnemonic association between "tilde" and "type" (compare "at" and "attribute")&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
