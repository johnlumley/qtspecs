<item>
   <title>Issue #1387 created</title>
   <pubDate>2024-08-13T15:55:18Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1387</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1387</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:build-uri: Observations&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;@ndw I’ll again start with a single test case, &lt;a href="https://github.com/qt4cg/qt4tests/blob/b5c9431b6e5c7e24729a4de19aac1754b0b34c4a/fn/build-uri.xml#L296-L314"&gt;fn-build-uri-from-parse-020&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;test-case name="fn-build-uri-from-parse-020"&amp;gt;
    &amp;lt;description&amp;gt;Builds an example from the specification&amp;lt;/description&amp;gt;
    &amp;lt;created by="Norm Tovey-Walsh" on="2023-03-10"/&amp;gt;
    &amp;lt;test&amp;gt;fn:build-uri(map {
  "uri": "ldap://[2001:db8::7]/c=GB?objectClass?one",
  "scheme": "ldap",
  "authority": "[2001:db8::7]",
  "host": "[2001:db8::7]",
  "path": "/c=GB",
  "query": "objectClass?one",
  "query-parameters": map {
    "": "objectClass?one"
  },
  "path-segments": ("", "c=GB")
})&amp;lt;/test&amp;gt;
    &amp;lt;result&amp;gt;
      &amp;lt;assert-eq&amp;gt;"ldap://[2001:db8::7]/c=GB?objectClass?one"&amp;lt;/assert-eq&amp;gt;
    &amp;lt;/result&amp;gt;
  &amp;lt;/test-case&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I would expect &lt;code&gt;ldap://[2001:db8::7]/c=GB?=objectClass%3Fone&lt;/code&gt; as result, as the spec says…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the &lt;code&gt;query-parameters&lt;/code&gt; key exists in the map, its value must be a map. A sequence of strings is constructed from the values in the map. For each key and each &lt;em&gt;value&lt;/em&gt; associated with that &lt;em&gt;key&lt;/em&gt; in turn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the &lt;em&gt;key&lt;/em&gt; is the empty string, the string constructed is the &lt;em&gt;value&lt;/em&gt; encoded with &lt;code&gt;encode-for-uri&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;…and &lt;code&gt;encode-for-uri('?')&lt;/code&gt; gives us &lt;code&gt;%3F&lt;/code&gt;. How do you handle that in your code?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
