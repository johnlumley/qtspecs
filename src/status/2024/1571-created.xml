<item>
   <title>Issue #1571 created</title>
   <pubDate>2024-11-12T17:35:45Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1571</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1571</guid>
   <description>&lt;div&gt;&lt;p&gt;Discussion: On the implementability of the specs and helping implementors&lt;/p&gt;&lt;div class="markup"&gt;&lt;h2&gt;Functions and Operators&lt;/h2&gt;
&lt;p&gt;There are 4 classes of function here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;functions that have to be implemented natively -- e.g. &lt;code&gt;fn:parse-html&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;functions that are implemented in terms of native operations -- i.e. the &lt;code&gt;dm:*&lt;/code&gt; and &lt;code&gt;op:*&lt;/code&gt; functions;&lt;/li&gt;
&lt;li&gt;functions that can be implemented in XSLT or XQuery but can be done more efficiently natively;&lt;/li&gt;
&lt;li&gt;functions that can be implemented in XSLT or XQuery as efficiently as they can natively.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It could be useful to generate a function library of the form &lt;code&gt;namespace/function.xqy&lt;/code&gt; and &lt;code&gt;namespace/function.xsl&lt;/code&gt; that has the implementation of the functions that can be implemented in XSLT and XQuery. This would allow implementors to import/include those implementations into their processors/engines. -- This is more flexible than providing them all in a single file as implementors can include the functions they don't have implementations for without having to edit the files every time the spec changes.&lt;/p&gt;
&lt;p&gt;Note: JavaScript supports polyfill files for new classes/functions so that engines that don't support those features can get a functioning implementation of that function/class.&lt;/p&gt;
&lt;p&gt;Note: Many JavaScript engines implement various functions in JavaScript itself.&lt;/p&gt;
&lt;h2&gt;XPath and XQuery&lt;/h2&gt;
&lt;p&gt;We could make the EBNF available as a separate file in addition to the iXML grammar that has been discused/worked on. This would help implementors on the lexer and parser at least. There's not much else we can do here as the language is custom.&lt;/p&gt;
&lt;h2&gt;XSLT&lt;/h2&gt;
&lt;p&gt;We have the XMLSchema and RelaxNG grammars to help with validation. Implementors could use these in their build systems to provide API bindings to the data model.&lt;/p&gt;
&lt;h2&gt;XDM&lt;/h2&gt;
&lt;p&gt;We could provide the XDM/XPath specific XMLSchema extensions as a separate XMLSchema definition to allow implementors to get access to the type infomation for these such as for &lt;code&gt;xs:numeric&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
