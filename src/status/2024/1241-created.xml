<item>
   <title>Issue #1241 created</title>
   <pubDate>2024-05-26T08:05:15Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1241</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1241</guid>
   <description>&lt;div&gt;&lt;p&gt;Node constructor vs. otherwise/map constructor&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I wonder whether we should care that the following expression could be interpreted in two ways:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;&amp;lt;ðŸ¤”/&amp;gt; ! (element otherwise {})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result could either be &lt;code&gt;&amp;lt;otherwise/&amp;gt;&lt;/code&gt; or an empty map.&lt;/p&gt;
&lt;p&gt;If we say itâ€™s an edge case that we can ignore, it would be fine for me.&lt;/p&gt;
&lt;p&gt;Before &lt;code&gt;otherwise&lt;/code&gt; was introduced, we used &lt;code&gt;?:&lt;/code&gt; in our implementation, analogous to Kotlinâ€™s &lt;a href="https://kotlinlang.org/docs/null-safety.html#elvis-operator"&gt;Elvis operator&lt;/a&gt;. JavaScript now has &lt;code&gt;??&lt;/code&gt; (which is no option for us).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
