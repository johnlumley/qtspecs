<item>
   <title>Issue #1468 created</title>
   <pubDate>2024-10-01T02:00:41Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1468</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1468</guid>
   <description>&lt;div&gt;&lt;p&gt;Understanding the xsl:array constructor&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In reading the XSLT specs on the &lt;code&gt;xsl:array&lt;/code&gt; constructor (#406 adopted at meeting &lt;a href="https://qt4cg.org/meeting/minutes/2023/03-28.html#pr-406"&gt;28&lt;/a&gt;) I find myself somewhat confused. Either I need to be illumined, the specs need to be clarified, or some other adjustments are needed.&lt;/p&gt;
&lt;p&gt;First, I'm still struck by the disparity between maps and arrays; there's a &lt;code&gt;xsl:map-member&lt;/code&gt; but no &lt;code&gt;xsl:array-member&lt;/code&gt;. That horse has been beaten many times, I know. But I need to record that the disparity is very noticeable. The disorientation is aggravated by the second example in the &lt;a href="https://qt4cg.org/specifications/xslt-40/Overview.html#array-construction"&gt;constructor overview&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:array use="?value"&amp;gt;
   &amp;lt;xsl:for-each-group select="0 to 19" group-adjacent=". idiv 4"&amp;gt;
     &amp;lt;xsl:map-entry key="'value'" select="current-group()"/&amp;gt;
   &amp;lt;/xsl:for-each-group&amp;gt;
&amp;lt;/xsl:array&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A map entry within an array? This just strikes me as a hack, and is suggestive of a design flaw in the language. (I know what you're about to say in response; hold that thought...) That's exacerbated when I see example 2c invoking an array constructor within an array, only to get rid of the nested array to get at what you wanted in the first place, the items grouped into members.&lt;/p&gt;
&lt;p&gt;Furthermore, the value of attribute &lt;code&gt;@use&lt;/code&gt;, &lt;code&gt;?value&lt;/code&gt;, is cryptic. Yes, I get what's going on, but the first several times reading it I thought it was very abracadabrish. And that same feeling hit me for the other examples' values of &lt;code&gt;@use&lt;/code&gt;: &lt;code&gt;.()&lt;/code&gt; and &lt;code&gt;?*&lt;/code&gt;. The &lt;code&gt;.()&lt;/code&gt; bit of syntax appears only twice in the specs (here), without explanation.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;@use&lt;/code&gt; is evaluated once for every item, then in example 2b...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:array use=".()"&amp;gt;
   &amp;lt;xsl:for-each-group select="0 to 19" group-adjacent=". idiv 4"&amp;gt;
     &amp;lt;xsl:sequence select="current-group#0"/&amp;gt;
   &amp;lt;/xsl:for-each-group&amp;gt;
&amp;lt;/xsl:array&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...I would expect the expression &lt;code&gt;.()&lt;/code&gt; to be applied to twenty items, because a sequence of five sequences of four items each is simply one sequence of twenty items, innit? Or are we allowed here and only here for a sequence constructor to create a sequence of sequences?&lt;/p&gt;
&lt;p&gt;It seems that &lt;code&gt;@use&lt;/code&gt; is striving to do something similar to &lt;code&gt;@group-by&lt;/code&gt; in &lt;code&gt;xsl:for-each-group&lt;/code&gt;. But it isn't. Understanding the goal is obfuscated by the vague name. Use what, to what end?&lt;/p&gt;
&lt;p&gt;Overall, I feel that the array constructor is a 2nd-class citizen in the specs. I love using the map constructor in XSLT: it tells users very clearly what's going on. I don't look forward to the using the array constructor in XSLT, because I think it does the opposite. But maybe I'm wrong.&lt;/p&gt;
&lt;p&gt;I don't have a specific proposal to fix, because I understand some of the conceptual hurdles to a putative &lt;code&gt;xsl:array-member&lt;/code&gt;. Still. I can't help but wish that that's what we had.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
