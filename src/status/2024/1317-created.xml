<item>
   <title>Issue #1317 created</title>
   <pubDate>2024-07-08T11:18:14Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1317</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1317</guid>
   <description>&lt;div&gt;&lt;p&gt;Record Test Subtype Relationship&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;For a subtype relationship between record tests, &lt;code&gt;A âŠ† B&lt;/code&gt;, I am trying to understand the impact of the extensibility of &lt;code&gt;A&lt;/code&gt;, where &lt;code&gt;B&lt;/code&gt; is extensible, but I can't spot any.&lt;/p&gt;
&lt;p&gt;The cases of extensible and non-extensible &lt;code&gt;A&lt;/code&gt; are distinguished in &lt;a href="https://qt4cg.org/specifications/xquery-40/xquery-40.html#id-item-subtype-records"&gt;3.3.2.10 Record Tests&lt;/a&gt;, points 5 and 6. The only difference between those, apart from &lt;code&gt;A&lt;/code&gt;'s extensibility, is the first one saying&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For every field that is declared in B but not in A, the declared type in B is item()*.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;while the second one has&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Every field that is declared in B with a type other than item()* is also declared in A.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the first one asks for a type of &lt;code&gt;item(*)&lt;/code&gt; when a declaration is missing, and the second one allows a missing declaration only for a type of &lt;code&gt;item(*)&lt;/code&gt;. How can that not be the same?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
