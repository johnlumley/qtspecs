<item>
   <title>Issue #1619 created</title>
   <pubDate>2024-11-29T08:23:46Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1619</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1619</guid>
   <description>&lt;div&gt;&lt;p&gt;XSLT: keys as maps&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose an XSLT function map-for-key('keyname', $root) which returns a map $M having the property that &lt;code&gt;map:get($M, $key)&lt;/code&gt; returns the value of &lt;code&gt;key('keyname', $key, $root)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This enables XSLT keys to be exploited in new ways: for example it becomes easy to merge the indexes for multiple documents, or to iterate over all the keys in a document.&lt;/p&gt;
&lt;p&gt;These benefits can already be obtained by scrapping keys entirely and building maps instead; but keys do have some benefits (like remaining implicitly associated with particular documents, and being "more declarative") and if you've got a legacy application that makes extensive use of keys, this function gives you a bridging capability.&lt;/p&gt;
&lt;p&gt;There are a few edge cases that will need ironing out, for example keys allow matching using a collation, which maps don't. (And the spec of xsl:key, now I come to think of it, says nothing about comparing date/time values in different timezones; I don't expect anyone has ever tried.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
