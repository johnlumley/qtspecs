<item>
   <title>Issue #1427 created</title>
   <pubDate>2024-09-07T08:27:23Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1427</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1427</guid>
   <description>&lt;div&gt;&lt;p&gt;Add a function equivalent to xsl:number&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose adding a function to perform node numbering in a manner analogous to xsl:number (but without the formatting aspects, which can be handled using format-integer, and without multi-level numbering).&lt;/p&gt;
&lt;p&gt;I envisage a function along the following lines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node-number($node as element(), 
                         $from as (document-node()|element()), 
                         $count as fn($node as element()) as xs:boolean?)
   as xs:integer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function returns the number of element nodes that satisfy all the following conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they are descendants of $from&lt;/li&gt;
&lt;li&gt;they are preceding-or-self nodes of $node&lt;/li&gt;
&lt;li&gt;they satisfy the $count predicate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$node defaults to the context node. $from defaults to the parent of $node. $count defaults to a function that returns true for an element that has the same name as $node, false otherwise.&lt;/p&gt;
&lt;p&gt;With no arguments, node-number() applied to (say) a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element returns the number of preceding-sibling &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements plus one. &lt;em&gt;[Not quite. Under this definition, it would also count &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements that are descendants of a preceding-sibling element]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The rationale for this proposal is (a) to make the core functionality of xsl:number available in environments other than XSLT, and (b) within XSLT, to make it available in contexts such as a predicate of a match pattern where it is currently difficult or impossible to invoke &lt;code&gt;xsl:number&lt;/code&gt; except by wrapping it in a user-defined variable or function.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
