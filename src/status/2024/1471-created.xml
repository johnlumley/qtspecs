<item>
   <title>Issue #1471 created</title>
   <pubDate>2024-10-01T13:43:34Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1471</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1471</guid>
   <description>&lt;div&gt;&lt;p&gt;JSON Serialization: Sequences on Top Level&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Extracted from #576:&lt;/p&gt;
&lt;p&gt;All serialization methods except for &lt;code&gt;json&lt;/code&gt; allow sequences to be output on top level. We should also allow this for JSON data. This way, constructs like…&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare option output:item-separator '&amp;amp;#xa;';
declare option output:method 'text';

for $json in ({ 1: 2 }, { 3: 4 })
return serialize($json, { 'method': 'json' })
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…can be simplified to:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare option output:item-separator '&amp;amp;#xa;';
declare option output:method 'json';
{ 1: 2 },
{ 3: 4 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We should still not allow sequences within JSON structures. It would be inconsistent to have different output rules depending on the number of items in a sequence (&lt;code&gt;(1)&lt;/code&gt; and &lt;code&gt;[1]&lt;/code&gt; would not be serialized identically).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
