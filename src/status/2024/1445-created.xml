<item>
   <title>Issue #1445 created</title>
   <pubDate>2024-09-16T11:34:39Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1445</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1445</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:xml-to-json: `number-formatter` option&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I try to, but I don’t get happy with the &lt;code&gt;number-formatter&lt;/code&gt; option of &lt;code&gt;fn:xml-to-json&lt;/code&gt;. It results in a lot of special-casing at serialization time for a very special case. More generally, …&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The option would be much more helpful for outputting maps and arrays as JSON with at serialization time, but it is not available as standard serialization parameter.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:xml-to-json&lt;/code&gt; represents numbers as text nodes, so numbers already have a string representation. If needed, they could easily be preprocessed before being serialized as JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I imagine that the major use cases for the option will be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to avoid scientific representation for doubles, and&lt;/li&gt;
&lt;li&gt;to be able to serialize &lt;code&gt;INF&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Couldn’t we simply allow numeric string values (i.e., the children of &lt;code&gt;fn:number&lt;/code&gt; elements) to be output without changes?&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;'1000000' =&amp;gt; json-to-xml() =&amp;gt; xml-to-json()  (: 1000000 instead of 1.0E6 :)
xml-to-json(&amp;lt;fn:number&amp;gt;INF&amp;lt;/fn:number&amp;gt;)      (: INF instead of error :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We already have the &lt;code&gt;number-parser&lt;/code&gt; option, which allows us to generate a string representation for numbers that will be suitable for being converted back with &lt;code&gt;fn:xml-to-json&lt;/code&gt;. For other cases, the XML source can easily be updated before being passed to &lt;code&gt;fn:xml-to-json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If we really want to keep the option, …&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We should add examples for its usage in the spec.&lt;/li&gt;
&lt;li&gt;We need more tests.&lt;/li&gt;
&lt;li&gt;I would suggest using the function type &lt;code&gt;(fn(xs:untypedAtomic) as xs:untypedAtomic)?&lt;/code&gt;, similar as for &lt;code&gt;fn:replace&lt;/code&gt; and &lt;code&gt;fn:json-to-xml&lt;/code&gt; (this would allow things like &lt;code&gt;xml-to-json($input, { 'number-formatter': fn { . + 1 } })&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;We should also add it as a general serialization parameter to be able to write:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;serialize(xs:double('NaN'), {
  'method': 'json',
  'number-formatter': fn($n) { if(is-NaN($n)) then '"NaN"' else $n }
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If it’s too much hassle to introduce it as a general serialization parameter, we should at least provide it for &lt;code&gt;fn:serialize&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
