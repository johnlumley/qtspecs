<item>
   <title>Issue #1340 created</title>
   <pubDate>2024-07-22T12:04:52Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1340</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1340</guid>
   <description>&lt;div&gt;&lt;p&gt;Namespace nodes and the namespace axis&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;It would be nice to bring XSLT, XPath, and XQuery into line here.&lt;/p&gt;
&lt;p&gt;The current state of play seems to be:&lt;/p&gt;
&lt;p&gt;XQuery: the namespace axis is not supported. Namespace nodes can be constructed, but they exist only as detached orphans; they can never be attached to a parent element.&lt;/p&gt;
&lt;p&gt;XPath: the namespace axis is deprecated and support is optional. There is no mechanism for constructing namespace nodes.&lt;/p&gt;
&lt;p&gt;XSLT: the namespace axis is mandatory. Namespace nodes can be constructed and can be attached to elements.&lt;/p&gt;
&lt;p&gt;I believe that the only reason for the differences is that XQuery implementors were concerned that it would be difficult to implement namespace nodes efficiently. I think XSLT has clearly demonstrated that this concern is unjustified.&lt;/p&gt;
&lt;p&gt;However, there are implementation complexities, primarily around the fact that namespace nodes have identity and parentage, so if a namespace is declared on a root element, then every element in the document has a namespace node for this namespace, and these have distinct identity. To implement this efficiently, the implementation has to instantiate namespace nodes lazily on demand, and then has to ensure that if the "same" namespace node is instantiated again, it has the same "identity".&lt;/p&gt;
&lt;p&gt;I suggest a solution along the following lines, applied to all three languages:&lt;/p&gt;
&lt;p&gt;(a) the namespace axis is supported and delivers namespace nodes&lt;/p&gt;
&lt;p&gt;(b) operations that depend on the ordering, identity, or parentage of namespace nodes are deprecated and implementation-defined.&lt;/p&gt;
&lt;p&gt;(c) the data model says that the in-scope namespaces of an element are in the form of a (prefix, URI) map. The semantics of the namespace axis are described in terms of constructing transient namespace nodes from this map.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
