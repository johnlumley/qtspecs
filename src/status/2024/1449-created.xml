<item>
   <title>Issue #1449 created</title>
   <pubDate>2024-09-17T07:41:42Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1449</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1449</guid>
   <description>&lt;div&gt;&lt;p&gt;Discussion: include/import of files.&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I don't especially do this.&lt;/p&gt;
&lt;p&gt;a) because the environment that we run XSLT in (95% of the time) doesnt support it
b) because its too rigid to use (maybe I'm doing it wrong).&lt;/p&gt;
&lt;p&gt;Motivation:&lt;/p&gt;
&lt;p&gt;I have 'module' List.xsl lets say that models lists, and has a function (in psuedo XPath so you can see the types)
(a module contains constructors and ideally all functions related to, here, a list)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;function tryHead($xs as list()) as maybe() &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I have 'module' Maybe.xsl lets say that models Maybe&lt;/p&gt;
&lt;p&gt;&lt;code&gt;function toList($xs as maybe()) as list() &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So Maybe.xsl needs to know about List.xsl and List.xsl needs to know about Maybe.xsl&lt;/p&gt;
&lt;p&gt;if I use xsl:include or xsl:import (in saxon) I get:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;The stylesheet module includes/imports itself directly or indirectly&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(which I'm happy reflects the correct behaviour given the spec - i.e. I don't think this is a bug in the implementation)&lt;/p&gt;
&lt;p&gt;Given that I CAN write this cycle in a single file, without restrictions on the order of the constructs (i.e. this isnt a restriction of the language itself - this isnt alway true in other languages), it seems less than ideal that I can't freely compose files in order to replicate the situation an allow decomposition into logical files.&lt;/p&gt;
&lt;p&gt;(I expect this is a consequence of the rules around priority of templates, which I am broadly ignorant of, and to be honest, largely not directly concerned with - I don't use this to 'compose' templates, but to write 'function' libraries)&lt;/p&gt;
&lt;p&gt;(MK has answered a question in stack overflow related to this, which solved the issue by reorganising the files, which is what I currently do, but its not ideal that I cannot decompose and test code in isolation)&lt;/p&gt;
&lt;p&gt;Is this worth resolving?&lt;/p&gt;
&lt;p&gt;Many years ago I was a C programmer, and I remember a similar issue that was resolved with #define, whereby header files were imported something like this (excuse my made up C syntax)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifndef _Maybe_
#include "Maybe.h"
#endifndef
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then Maybe.h would define &lt;code&gt;_Maybe_&lt;/code&gt;, this would mean, if you followed the idiom, that the file was included by the preprocessor, at most once (I'm not suggesting this mechanism is directly applicable, just that this is a common issue elsewhere).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
