<item>
   <title>Issue #1224 created</title>
   <pubDate>2024-05-18T02:27:22Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1224</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1224</guid>
   <description>&lt;div&gt;&lt;p&gt;Attribute priority for xsl:accumulator-rule&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose that XSLT &lt;code&gt;xsl:accumulator-rule&lt;/code&gt; be allowed to take attribute &lt;code&gt;priority&lt;/code&gt;, to allow users to be more declarative in their accumulator rules. Even accumulators with two or three rules might require simple overshadowing: a default rule for the majority of nodes, with accommodation for certain exceptions. An explicitly declared priority rather than document order will allows users to better express their intentions, and processor-generated warnings about duplicate matches will be more meaningful.&lt;/p&gt;
&lt;p&gt;Because the current rules stipulate that among multiple rules the last one in document order wins, I think that backward compatibility prevents us from using the default priority rules for templates (i.e., allotting -0.5, 0, 0.25 scores based on match pattern types). Rather, in this case, every accumulator rule is assumed to have priority 0, unless otherwise specified. If a node matches more than one rule of the same priority level, the last one wins. This simpler version of priority (assume zero, and if you know multiple matches will overlap, use &lt;code&gt;@priority&lt;/code&gt;) is one that many developers have come to use for templates.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
