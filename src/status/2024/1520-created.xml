<item>
   <title>Issue #1520 created</title>
   <pubDate>2024-10-21T13:58:44Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1520</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1520</guid>
   <description>&lt;div&gt;&lt;p&gt;Type declarations of cyclically dependent modules&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The specification of &lt;a href="https://qt4cg.org/specifications/xquery-40/xquery-40.html#id-item-type-declaration"&gt;Item Type Declarations&lt;/a&gt; has this restriction:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The declaration of an item type (whether locally declared in a module or imported from a public declaration in an imported module) must precede any use of the item type name: that is, the name only becomes available in the static context of constructs that lexically follow the relevant item type declaration or module import. A consequence of this rule is that cyclic and self-referential definitions are not allowed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But modules explicitly are allowed to have &lt;a href="https://qt4cg.org/specifications/xquery-40/xquery-40.html#id-module-handling-cycles"&gt;cyclic dependencies&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Implementations must resolve cycles in the import graph, either at the level of target namespace URIs or at the level of location URIs, and ensure that each module is imported only once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Does that mean that the modules below are valid? They depend on each other, but the types that they define do not have a cyclic dependency. In particular, the use of each type lexically follows the relevant module import, as asked for.&lt;/p&gt;
&lt;p&gt;If this case must be supported, the usefulness of the above restriction for XQuery processors is somewhat limited, IMO it compromises &lt;a href="https://qt4cg.org/specifications/xquery-40/xquery-40.html#id-item-type-declaration"&gt;this suggestion&lt;/a&gt; for handling declared types:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Named item types have been designed so that a reference to an item type name can be expanded (that is, replaced by its definition) as soon as the reference is encountered during query parsing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: a.xqm :)
module namespace a = 'a';
import module namespace b = 'b' at 'b.xqm';
declare type a:t1 as b:t2;
declare type a:t2 as xs:integer;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: b.xqm :)
module namespace b = 'b';
import module namespace a = 'a' at 'a.xqm';
declare type b:t1 as a:t2;
declare type b:t2 as xs:integer;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
