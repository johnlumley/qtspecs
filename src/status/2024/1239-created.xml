<item>
   <title>Issue #1239 created</title>
   <pubDate>2024-05-23T06:56:42Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1239</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1239</guid>
   <description>&lt;div&gt;&lt;p&gt;XSLT xsl:next-match with select attribute&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The ability of &lt;code&gt;xsl:next-match&lt;/code&gt; to apply a sequence of template rules to the same item is limited by the fact that the item in question cannot be changed in any way. For example, if I want a template rule that matches an array to sort the array and then continue processing using the next rule for arrays, it's not possible; applying templates to the new array will sort it again, ad infinitum, while doing next-match is only possible on the original array, not the new sorted version.&lt;/p&gt;
&lt;p&gt;I propose that xsl:next-match should have a select attribute. The effect is to process the selected items using the current mode, considering only the template rules that are lower in ranking order than the current template rule.&lt;/p&gt;
&lt;p&gt;Alternatively or in addition, we could drop the rule that instructions that change the context item also clear the current mode. This would enable, for example, xsl:next-match to be used within xsl:for-each. However, it's possible that the results here could be confusing: we need to look at use cases.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
