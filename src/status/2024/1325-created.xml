<item>
   <title>Issue #1325 created</title>
   <pubDate>2024-07-16T18:50:35Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1325</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1325</guid>
   <description>&lt;div&gt;&lt;p&gt;Variadic System Functions: Principles?&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In the current spec, the following functions are variadic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fn:concat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:codepoints-to-string&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:distinct-ordered-nodes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The advantage of the variadic representation is that a user can omit additional parentheses; the drawback is that the function cannot be enhanced with parameters later on. In my point of view, &lt;code&gt;fn:distinct-ordered-nodes&lt;/code&gt; might be a candidate for that in the future (on the other hand, it will only be used by a very small user group one or the other way).&lt;/p&gt;
&lt;p&gt;Other candidates for variadicity could be (among others):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fn:count&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:exists&lt;/code&gt;, &lt;code&gt;fn:empty&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:head&lt;/code&gt;, &lt;code&gt;fn:tail&lt;/code&gt;, &lt;code&gt;fn:trunk&lt;/code&gt;, &lt;code&gt;fn:foot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:one-or-more&lt;/code&gt;, &lt;code&gt;fn:exactly-one&lt;/code&gt;, &lt;code&gt;fn:zero-or-one&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:innermost&lt;/code&gt;, &lt;code&gt;fn:outermost&lt;/code&gt;, &lt;code&gt;fn:unordered&lt;/code&gt;, &lt;code&gt;fn:reverse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:boolean&lt;/code&gt;, &lt;code&gt;fn:not&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:identity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:data&lt;/code&gt;, &lt;code&gt;fn:has-children&lt;/code&gt; (the 0-arity case would need to be preserved due to its special semantics)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that function calls like &lt;code&gt;fn:exactly-one(E1, E2)&lt;/code&gt; can be reasonable in practice, as &lt;code&gt;E1&lt;/code&gt; may return an empty sequence.&lt;/p&gt;
&lt;p&gt;I wonder if we can define a principle which functions should be variadic?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
