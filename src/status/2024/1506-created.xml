<item>
   <title>Issue #1506 created</title>
   <pubDate>2024-10-17T09:56:54Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1506</link>
   <guid>https://qt4cg.org/@qt4cg/2024/#created-1506</guid>
   <description>&lt;div&gt;&lt;p&gt;Type declarations: Constructor functions?&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I’ve tagged this as a discussion issue:&lt;/p&gt;
&lt;p&gt;Would it make sense to declare constructor functions for the new XQuery type declarations, similar to what we now have for records, or do we believe that’s over the top?&lt;/p&gt;
&lt;p&gt;It might improve typing in complex code, and it would allow us to write things like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare type world:continent as enum('Africa', 'America', 'Asia', 'Australia', 'Europe');
world:continent('Africa')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the type above, an implicit constructor function would be created that would simply coerce its argument to the declared type:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare function world:continent($value) as world:continent { $value };
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One current drawback is that this only works for prefixed types (see #657), whereas it’s possible to define types without prefix, and reference them in local type declarations:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare type continent as enum('Africa', 'America', 'Asia', 'Australia', 'Europe');
let $c as continent := 'Africa'
return $c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
