<item>
   <title>Issue #689 created</title>
   <pubDate>2023-09-08T08:36:45Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/689</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-689</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:stack-trace: replace with $err:stack-trace&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The current specification contains a diagnostic function called &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-stack-trace"&gt;&lt;code&gt;fn:stack-trace&lt;/code&gt;&lt;/a&gt;. Many other languages provide a similar function: The returned output can possibly help to understand which function calls led to an error during the evaluation of a code.&lt;/p&gt;
&lt;p&gt;Still, I have strong doubts that it is a good decision to include this function in the standard:&lt;/p&gt;
&lt;p&gt;The specification gives you a vast amount of freedom how to implement and optimize things. As a result, it’s completely feasible and reasonable to rewrite the following code…&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;declare function local:double($f) {
  $f * 2
};
(1 to 6) ! local:double(.)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…to &lt;code&gt;(1 to 6) ! (. * 2)&lt;/code&gt; at compile time. If a user adds a &lt;code&gt;fn:stack-overflow&lt;/code&gt; call in the function body, s·he would expect to find the function invocation of the original code representation in the output. As always, there are technical solutions to achieve this (store additional information in the evaluation tree on the original query; suppress optimizations when &lt;code&gt;fn:stack-trace&lt;/code&gt; is found), but all of them can affect the runtime behavior and lead to different evaluation trees, hiding possible bugs in the implementation (which can be a reason to call &lt;code&gt;fn:stack-trace&lt;/code&gt; at all).&lt;/p&gt;
&lt;p&gt;A standard should provide a minimum amount of assurance that a function behaves similarly across different implementations. At this time, I don’t believe we can’t give that guarantee.&lt;/p&gt;
&lt;p&gt;Related: #55, #686&lt;/p&gt;
&lt;p&gt;– As an alternative, a stack trace could optionally be created by an implementation when an error is triggered.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
